== 0.3.0 / 2009-11-25

  * WMI::Base.find now returns an array containing WMI::Base objects instead of 
    WIN32OLE objects.  This allows for a more Rubyish API to access WMI objects.
  * WMI::Base#[] should act like a HashWithIndifferentAccess, or Mash. Objects can
    be referenced with strings or symbols.
  * To maintain compatibility with any existing code, WMI methods and properties 
    can be accessed using camelcased or underscored names.  For instance, these will 
    all work:
      <code>
        > host = WMI::Win32_ComputerSystem.first
        => #<WMI::Win32_ComputerSystem:HostName>
        > host.number_of_processors
        => 1
        > host['number_of_processors']
        => 1
        > host[:number_of_processors]
        => 1
        > host.NumberOfProcessors
        => 1
        > host['NumberOfProcessors']
        => 1
        > host[:NumberOfProcessors]
        => 1
      </code>
  * added #methods method.  methods(false) will return a list of WMI object methods,
    camelcased method names are replaced with underscored method names.    
  * added #attributes method, returns a hash of properties, camelcased keys are
    replaced with underscored names
  * added #all, #first, and #last methods as aliases for
    #find(:all), #find(:first), and #find(:last)
  * added #set_wmi_class_name method, similar to ActiveRecord's #set_table_name
  
    This allows you to create models with names you like.
    
    <code>
      class Disk < WMI::Base
        set_wmi_class_name "Win32_LogicalDisk"
      end
      
      disks = Disk.all
    </code>


== 0.2.2 / 2008-01-11

* 1 major enhancement
  * supports privileges
    <code>
      events = WMI::Win32_NTLogEvent.find(
        :all,
        :privileges => [WMI::Privilege::Security],
        :conditions => {:logfile => 'Security', :eventcode => '517'} )
    </code>
* minor enhancements
    * added error handling for invalid queries and class name typos
    * better documentation

== 0.2.1 / 2007-07-19

* minor enhancements
  * fixed version numbers
  * fixed sample code


== 0.2.0 / 2007-07-19

* 1 major enhancement
  * Birthday!

